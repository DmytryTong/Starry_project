# Generated by Django 4.1.7 on 2023-03-26 20:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Visitor',
            fields=[
                (
                    'id', models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID'
                    )
                ),
                (
                    'password', models.CharField(
                        max_length=128,
                        verbose_name='password'
                    )
                ),
                (
                    'last_login', models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name='last login'
                    )
                ),
                (
                    'is_superuser', models.BooleanField(
                        default=False,
                        help_text=(
                            'Designates that this user has all'
                            ' permissions without explicitly assigning them.'
                        ),
                        verbose_name='superuser status'
                    )
                ),
                (
                    'username',
                    models.CharField(
                        error_messages={
                            'unique':
                                'A user with that username already exists.'
                        },
                        help_text=(
                            'Required. 150 characters or fewer.'
                            ' Letters, digits and @/./+/-/_ only.'
                        ),
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.
                            UnicodeUsernameValidator()
                        ],
                        verbose_name='username'
                    )
                ),
                (
                    'first_name',
                    models.CharField(
                        blank=True,
                        max_length=150,
                        verbose_name='first name'
                    )
                ),
                (
                    'last_name',
                    models.CharField(
                        blank=True,
                        max_length=150,
                        verbose_name='last name'
                    )
                ),
                (
                    'email',
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name='email address'
                    )
                ),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text=(
                            'Designates whether the user '
                            'can log into this admin site.'
                        ),
                        verbose_name='staff status'
                    )
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text=(
                            'Designates whether this user should be '
                            'treated as active. Unselect this instead'
                            ' of deleting accounts.'
                        ),
                        verbose_name='active'
                    )
                ),
                (
                    'date_joined',
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name='date joined'
                    )
                ),
                (
                    'ticket_number',
                    models.IntegerField()
                ),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text=(
                            'The groups this user belongs to.'
                            ' A user will get all permissions '
                            'granted to each of their groups.'
                        ),
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups'
                    )
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions'
                    )
                ),
            ],
            options={
                'verbose_name': 'visitor',
                'verbose_name_plural': 'visitors',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID'
                    )
                ),
                (
                    'show_time',
                    models.DateTimeField()
                ),
                (
                    'name',
                    models.CharField(max_length=255)
                ),
                (
                    'ticket_cost',
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=6)
                ),
            ],
        ),
        migrations.CreateModel(
            name='Musician',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID'
                    )
                ),
                (
                    'first_name',
                    models.CharField(
                        max_length=255
                    )
                ),
                (
                    'last_name',
                    models.CharField(
                        max_length=255
                    )
                ),
                (
                    'position',
                    models.CharField(
                        max_length=255
                    )
                ),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID'
                    )
                ),
                (
                    'ticket_number',
                    models.IntegerField()
                ),
                (
                    'event',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='tickets', to='bar.event'
                    )
                ),
                (
                    'owner',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL
                    )
                ),
            ],
        ),
        migrations.CreateModel(
            name='Rockband',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID'
                    )
                ),
                (
                    'band_name',
                    models.CharField(
                        max_length=255
                    )
                ),
                (
                    'genre',
                    models.CharField(
                        max_length=255
                    )
                ),
                (
                    'number_of_members',
                    models.IntegerField()
                ),
                (
                    'musicians',
                    models.ManyToManyField(
                        related_name='groups',
                        to='bar.musician'
                    )
                ),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='bands',
            field=models.ManyToManyField(
                related_name='events',
                to='bar.rockband'
            ),
        ),
        migrations.AddField(
            model_name='event',
            name='visitors',
            field=models.ManyToManyField(
                related_name='events',
                to=settings.AUTH_USER_MODEL
            ),
        ),
    ]
